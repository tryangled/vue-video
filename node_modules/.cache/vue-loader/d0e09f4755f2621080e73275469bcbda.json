{"remainingRequest":"/usr/local/Cellar/node/6.3.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/administrator/Documents/tryangledProjects/npm/vue-video/src/VueVideo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/administrator/Documents/tryangledProjects/npm/vue-video/src/VueVideo.vue","mtime":1564403811689},{"path":"/usr/local/Cellar/node/6.3.1/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/local/Cellar/node/6.3.1/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/Cellar/node/6.3.1/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport axios from \"axios\";\n\nexport default {\n props: {\n  color: {\n   type: String,\n   default: \"blue\",\n   validator(x) {\n     return [\"blue\", \"green\", \"red\"].indexOf(x) !== -1;\n   }\n  },\n  rounded: {\n   type: Boolean,\n   default: true\n  },\n  size: {\n   type: String,\n   default: \"default\",\n   validator(x) {\n    return [\"small\", \"default\", \"large\"].indexOf(x) !== -1;\n   }\n  },\n },\n  data() {\n    return {\n      videoUrl: \"\",\n      videoisValid: \"\",\n      videoThumbUrl: \"\",\n\n    };\n  },\n methods: {\n  onClick(event) {\n   this.$emit(\"click\", event);\n  },\n\n  onDoubleClick(event) {\n   this.$emit(\"dblclick\", event);\n  },\n  processVideoLink() {\n    \n    console.log(this.videoUrl);\n    if (this.videoUrl == \"\") {\n        // console.log(\"Do nothing\");\n        return 0;\n      } else {\n        this.videoisValid = false;\n        this.videoThumbUrl = \"\";\n        var notYoutube = false;\n        var youtube_video_id = this.videoUrl.match(\n          /[youtube | youtu]\\.[com|be].*(\\?v=|\\/embed\\/|\\/)(.{11})/\n        );\n        //Check if it is youtube video or Vimeo\n        if (youtube_video_id) {\n          youtube_video_id = youtube_video_id.pop();\n          //Verify the length of the youtube viceo id retreived\n          if (youtube_video_id.length == 11) {\n            var video_thumbnail =\n              \"https://img.youtube.com/vi/\" + youtube_video_id + \"/0.jpg\";\n            this.videoUrl = \"https://www.youtube.com/embed/\" + youtube_video_id;\n            this.videoisValid = true;\n            this.videoThumbUrl = video_thumbnail;\n            \n            this.$emit(\"VideoDetails\", {\n              videoUrl: this.videoUrl,\n              videoisValid: this.videoisValid,\n              videoThumbUrl: this.videoThumbUrl\n            });\n          } else {\n            notYoutube = true;\n          }\n        } else {\n          notYoutube = true;\n        }\n        //To check for vimeo\n        if (notYoutube) {\n          var VIMEO_BASE_URL = \"https://vimeo.com/api/oembed.json?url=\";\n          var videoTestUrl = this.videoUrl;\n\n          var self = this;\n          axios.get(VIMEO_BASE_URL + videoTestUrl).then(\n            function(response) {\n              self.videoUrl =\n                \"https://player.vimeo.com/video/\" + response.data.video_id;\n              self.videoisValid = true;\n              self.videoThumbUrl = response.data.thumbnail_url_with_play_button;\n              if (close == true) self.clickedClose();\n              self.noOfFiles = self.files.length + 1;\n              //console.log(\"Self Emit\");\n              self.$emit(\"VideoDetails\", {\n                videoUrl: self.videoUrl,\n                videoisValid: self.videoisValid,\n                videoThumbUrl: self.videoThumbUrl\n              });\n            },\n            function(error) {\n              console.log(\"error\");\n            }\n          );\n        }\n\n\n\n      }\n  },\n }\n};\n",{"version":3,"sources":["VueVideo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA","file":"VueVideo.vue","sourceRoot":"src","sourcesContent":["<template>\n <div>\n  <button\n    @click=\"onClick\"\n    @dblclick=\"onDoubleClick\"\n    :class=\"[\n    'nice-handsome-button',\n    'nice-handsome-button--' + color,\n    'nice-handsome-button--' + size,\n    {\n      'nice-handsome-button--rounded': rounded\n    }\n    ]\"\n  >\n    <slot></slot>\n  </button>\n  <input\n    type=\"text\"\n    placeholder=\"VÃ­deo Link (Youtube or Vimeo)\"\n    v-on:keypress.13=\"processVideoLink\"\n    @blur=\"processVideoLink\"\n    v-model=\"videoUrl\"\n  ></input>\n  </div>\n</template>\n\n\n<script>\n\nimport axios from \"axios\";\n\nexport default {\n props: {\n  color: {\n   type: String,\n   default: \"blue\",\n   validator(x) {\n     return [\"blue\", \"green\", \"red\"].indexOf(x) !== -1;\n   }\n  },\n  rounded: {\n   type: Boolean,\n   default: true\n  },\n  size: {\n   type: String,\n   default: \"default\",\n   validator(x) {\n    return [\"small\", \"default\", \"large\"].indexOf(x) !== -1;\n   }\n  },\n },\n  data() {\n    return {\n      videoUrl: \"\",\n      videoisValid: \"\",\n      videoThumbUrl: \"\",\n\n    };\n  },\n methods: {\n  onClick(event) {\n   this.$emit(\"click\", event);\n  },\n\n  onDoubleClick(event) {\n   this.$emit(\"dblclick\", event);\n  },\n  processVideoLink() {\n    \n    console.log(this.videoUrl);\n    if (this.videoUrl == \"\") {\n        // console.log(\"Do nothing\");\n        return 0;\n      } else {\n        this.videoisValid = false;\n        this.videoThumbUrl = \"\";\n        var notYoutube = false;\n        var youtube_video_id = this.videoUrl.match(\n          /[youtube | youtu]\\.[com|be].*(\\?v=|\\/embed\\/|\\/)(.{11})/\n        );\n        //Check if it is youtube video or Vimeo\n        if (youtube_video_id) {\n          youtube_video_id = youtube_video_id.pop();\n          //Verify the length of the youtube viceo id retreived\n          if (youtube_video_id.length == 11) {\n            var video_thumbnail =\n              \"https://img.youtube.com/vi/\" + youtube_video_id + \"/0.jpg\";\n            this.videoUrl = \"https://www.youtube.com/embed/\" + youtube_video_id;\n            this.videoisValid = true;\n            this.videoThumbUrl = video_thumbnail;\n            \n            this.$emit(\"VideoDetails\", {\n              videoUrl: this.videoUrl,\n              videoisValid: this.videoisValid,\n              videoThumbUrl: this.videoThumbUrl\n            });\n          } else {\n            notYoutube = true;\n          }\n        } else {\n          notYoutube = true;\n        }\n        //To check for vimeo\n        if (notYoutube) {\n          var VIMEO_BASE_URL = \"https://vimeo.com/api/oembed.json?url=\";\n          var videoTestUrl = this.videoUrl;\n\n          var self = this;\n          axios.get(VIMEO_BASE_URL + videoTestUrl).then(\n            function(response) {\n              self.videoUrl =\n                \"https://player.vimeo.com/video/\" + response.data.video_id;\n              self.videoisValid = true;\n              self.videoThumbUrl = response.data.thumbnail_url_with_play_button;\n              if (close == true) self.clickedClose();\n              self.noOfFiles = self.files.length + 1;\n              //console.log(\"Self Emit\");\n              self.$emit(\"VideoDetails\", {\n                videoUrl: self.videoUrl,\n                videoisValid: self.videoisValid,\n                videoThumbUrl: self.videoThumbUrl\n              });\n            },\n            function(error) {\n              console.log(\"error\");\n            }\n          );\n        }\n\n\n\n      }\n  },\n }\n};\n</script>\n\n\n<style>\n.nice-handsome-button {\n display: inline-block;\n outline: 0;\n border: 1px solid rgba(0, 0, 0, 0.1);\n color: #ffffff;\n font-weight: 500;\n font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n user-select: none;\n cursor: pointer;\n}\n\n/* --> COLORS <-- */\n\n.nice-handsome-button--blue {\n background-color: #0194ef;\n}\n\n.nice-handsome-button--green {\n background-color: #1bb934;\n}\n\n.nice-handsome-button--red {\n background-color: #e1112c;\n}\n\n/* --> SIZES <-- */\n\n.nice-handsome-button--small {\n padding: 8px 10px;\n border-radius: 4px;\n font-size: 12px;\n line-height: 12px;\n}\n\n.nice-handsome-button--default {\n padding: 12px 14px;\n border-radius: 6px;\n font-size: 14px;\n line-height: 16px;\n}\n\n.nice-handsome-button--large {\n padding: 16px 18px;\n border-radius: 8px;\n font-size: 16px;\n line-height: 20px;\n} \n\n/* --> BOOLEANS <-- */\n\n.nice-handsome-button--rounded {\n border-radius: 60px;\n}\n</style>"]}]}